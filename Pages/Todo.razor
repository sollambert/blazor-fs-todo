@page "/todo"
@* @using Models; *@
@inject TodoItemService todoService;

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>

<ul>
    @foreach (var todo in todos) {
        <li>
            <input type="checkbox" @bind="todo.IsDone" @onclick="() => UpdateTodo(todo)"/>
            <input @bind ="todo.Title" />
        </li>
    }
</ul>

<input placeholder="Something todo" @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>

@code {
    private List<TodoItem> todos = new();
    private string? newTodo;

    protected override async Task OnInitializedAsync()
    {
        await GetTodos();
    }

    private async Task<List<TodoItem>> GetTodos()
    {
        todos = await todoService.GetAllTodos();
        return todos;
    }

    private async Task AddTodo()
    {
        if(!string.IsNullOrWhiteSpace(newTodo))
        {
            var result = await todoService.AddTodo(new TodoItem { Title = newTodo });
            if (result) {
                newTodo = string.Empty;
                await GetTodos();
            }
        }
    }

    private async Task UpdateTodo(TodoItem todo)
    {
        todo.IsDone = !todo.IsDone;
        Console.WriteLine(todo.IsDone);
        var result = await todoService.UpdateTodo(todo);
        await GetTodos();
    }
}
